import { API } from 'constants/index';

const token = localStorage.getItem('jwt');

export const fetchProfile = (username) => async (dispatch) => {

    dispatch({
        type: 'FETCH_PROFILE_REQUEST'
    });

    try {
        const url = `${API}/profiles/${username}`;
        const options = {
            method: 'GET',
            headers: {
                'Content-Type': 'application/json;charset=utf-8',
                'authorization': token ? `Token ${token}` : '',
            },
        };
        const response = await fetch(url, options);
        const result = await response.json();

        dispatch({
            type: 'FETCH_PROFILE_SUCCESS',
            payload: result.profile,
        });
    } catch (error) {
        dispatch({
            type: 'FETCH_PROFILE_FAILURE',
            payload: error,
        });
    }
};

export const follow = (username) => async (dispatch) => {

    dispatch({
        type: 'POST_FOLLOW_REQUEST',
    });

    try {
        const url = `${API}/profiles/${username}/follow`;
        const options = {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json;charset=utf-8',
                'authorization': token ? `Token ${token}` : '',
            },
        };
        const response = await fetch(url, options);
        const result = await response.json();

        dispatch({
            type: 'POST_FOLLOW_SUCCESS',
            payload: result,
        });
    } catch (error) {
        dispatch({
            type: 'POST_FOLLOW_FAILURE',
            payload: error,
        });
    }
};

export const unfollow = (username) => async (dispatch) => {

    dispatch({
        type: 'DELETE_UNFOLLOW_REQUEST',
    });

    try {
        const url = `${API}/profiles/${username}/follow`;
        const options = {
            method: 'POST',
        };
        const response = await fetch(url, options);
        const result = await response.json();

        dispatch({
            type: 'DELETE_UNFOLLOW_SUCCESS',
            payload: result,
        });
    } catch (error) {
        dispatch({
            type: 'DELETE_UNFOLLOW_FAILURE',
            payload: error,
        });
    }
};