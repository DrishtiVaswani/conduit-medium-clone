import { UPDATE_FIELD_AUTH } from 'constants/types';
import { API } from 'constants/index';

export const setUsername = (username) => (dispatch) => {
    dispatch({ type: UPDATE_FIELD_AUTH, key: 'username', value: username });
};

export const setEmail = (email) => (dispatch) => {
    dispatch({ type: UPDATE_FIELD_AUTH, key: 'email', value: email });
};

export const setPassword = (password) => (dispatch) => {
    dispatch({ type: UPDATE_FIELD_AUTH, key: 'password', value: password });
};

export const submitRegister = (username, email, password) => async (dispatch) => {

    dispatch({
        type: 'POST_REGISTER_REQUEST',
    });

    try {
        const url = `${API}/users`;
        const options = {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json;charset=utf-8',
            },
            body: JSON.stringify({ user: { username, email, password } }),
        };
        const response = await fetch(url, options);
        const user = await response.json();

        dispatch({
            type: 'POST_REGISTER_SUCCESS',
            payload: user,
        });
    } catch (error) {
        dispatch({
            type: 'POST_REGISTER_FAILURE',
            payload: error,
        });
    }

};

export const submitLogin = (email, password) => async (dispatch) => {

    dispatch({
        type: 'POST_LOGIN_REQUEST',
    });

    try {
        const url = `${API}/users/login`;
        const options = {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json;charset=utf-8',
            },
            body: JSON.stringify({ user: { email, password } }),
        };
        const response = await fetch(url, options);
        const result = await response.json();

        localStorage.setItem('jwt', result.user.token);

        dispatch({
            type: 'POST_LOGIN_SUCCESS',
            payload: result.user,
        });
    } catch (error) {
        dispatch({
            type: 'POST_LOGIN_FAILURE',
            payload: error,
        });
    }
};

export const authentication = (token) => async (dispatch) => {

    dispatch({
        type: 'FETCH_AUTHENTICATION_REQUEST'
    });

    try {
        const url = `${API}/user`;
        const options = {
            method: 'GET',
            headers: {
                'Content-Type': 'application/json;charset=utf-8',
                'authorization': `Token ${token}`
            },
        };
        const response = await fetch(url, options);
        const result = await response.json();

        dispatch({
            type: 'FETCH_AUTHENTICATION_SUCCESS',
            payload: result.user,
        });
    } catch (error) {
        dispatch({
            type: 'FETCH_AUTHENTICATION_FAILURE',
            payload: error,
        });
    }
};