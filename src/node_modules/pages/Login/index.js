import React, { useState } from 'react';
import PropTypes from 'prop-types';
import { connect } from 'react-redux';
import { Redirect } from 'react-router-dom';
import { Button, TextInput, Checkbox, Alert, Pane } from 'evergreen-ui';

import Layout from 'components/Layout';
import { signIn } from 'actions/auth';

import './login.scss';

function Login({ signIn, isFetching, errors, isAuthenticated }) {

    const [email, setEmail] = useState('');
    const [password, setPassword] = useState('');
    const [checked, setChecked] = useState(false);

    const handleSubmit = (event) => {
        event.preventDefault();
        signIn(email, password);
    };

    if (isAuthenticated) {
        return <Redirect to="/" />
    }

    return (
        <Layout>
            <section className="login">
                <form onSubmit={handleSubmit}>
                    <header className="login-heading">
                        <h1>Войти</h1>
                        <p>Быстро и легко.</p>
                    </header>

                    {errors && (
                        <Pane>
                            {Object.keys(errors).map((key) => (
                                <Alert
                                    appearance="card"
                                    intent="danger"
                                    title={`${key} ${errors[key]}`}
                                />
                            ))}
                        </Pane>
                    )}

                    <div>
                        <TextInput
                            required
                            type="email"
                            placeholder="Электронный адрес"
                            value={email}
                            onChange={(e) => setEmail(e.target.value)}
                            width="100%"
                            height={40}
                        />
                    </div>

                    <div>
                        <TextInput
                            required
                            type="password"
                            placeholder="Пароль"
                            value={password}
                            onChange={(e) => setPassword(e.target.value)}
                            width="100%"
                            height={40}
                        />
                    </div>

                    <div>
                        <Checkbox
                            label="Remember me"
                            checked={checked}
                            onChange={(e) => setChecked(e.target.checked)}
                        />
                    </div>

                    <Button
                        type="submit"
                        appearance="primary"
                        isLoading={isFetching}
                        height={40}
                    >
                        Войти
                    </Button>
                </form>
            </section>
        </Layout>
    );
}

Login.propTypes = {
    signIn: PropTypes.func.isRequired,
    isFetching: PropTypes.bool.isRequired,
    isAuthenticated: PropTypes.bool.isRequired,
};

const mapStateToProps = (state) => ({
    isFetching: state.auth.isFetching,
    errors: state.auth.errors,
    isAuthenticated: state.auth.isAuthenticated,
});

const mapDispatchToProps = {
    signIn,
};

export default connect(mapStateToProps, mapDispatchToProps)(Login);