import React, { useEffect } from 'react';
import { connect } from 'react-redux';
import { Link } from 'react-router-dom';
import PropTypes from 'prop-types';
import { Skeleton, Tag, Divider, Tabs, Pagination, Spin } from 'antd';

import { fetchTags } from 'actions/tags';
import { fetchArticles, fetchYourFeedArticles } from 'actions/articles';
import Layout from 'components/Layout';
import Article from 'components/Article';

import './home.scss';

const { TabPane } = Tabs;

function Tags({ isFetching, tags }) {

    const handleClick = (event) => {
        event.preventDefault();

    };

    return (
        <div>
            <Divider orientation="left">Popular Tags</Divider>
            <Skeleton
                title={false}
                active
                loading={isFetching}
                paragraph={{ rows: 4 }}
            />
            <div>
                {tags.map((tag) => (
                    <Tag key={tag}>
                        <Link
                            to="#"
                            onClick={handleClick}
                        >
                            {tag}
                        </Link>
                    </Tag>
                ))}
            </div>
        </div>
    );
}

function Home({ fetchArticles, fetchYourFeedArticles, fetchTags, isFetching, feed, articles, tags, error, articlesCount }) {

    useEffect(() => {
        fetchTags();
        fetchArticles();
        fetchYourFeedArticles();
    }, [fetchArticles, fetchYourFeedArticles, fetchTags]);

    const handleChangePagination = (page, pageSize) => {
        fetchArticles(page, pageSize);
    };

    return (
        <Layout>
            <section className="banner" style={{ margin: '50px 0' }}>banner</section>
            <section className="home">
                <div className="content">

                    <Tabs defaultActiveKey="1">
                        <TabPane tab="Your Feed" key="1">
                            {!isFetching.feed && !error.feed && feed.map((article) => (
                                <Article key={article.slug} {...article} />
                            ))}
                        </TabPane>

                        <TabPane tab="Global Feed" key="2">
                            <Spin spinning={isFetching.articles}>
                                {!isFetching.articles && !error.articles && articles.map((article) => (
                                    <Article key={article.slug} {...article} />
                                ))}
                            </Spin>

                            <Pagination
                                defaultCurrent={1}
                                defaultPageSize={10}
                                total={articlesCount}
                                onChange={handleChangePagination}
                                onShowSizeChange={handleChangePagination}
                            />
                        </TabPane>
                    </Tabs>
                </div>
                <div className="sidebar">
                    <Tags
                        isFetching={isFetching.tags}
                        tags={tags}
                    />
                </div>
            </section>
        </Layout >
    );
}

Home.propTypes = {
    fetchArticles: PropTypes.func.isRequired,
    fetchTags: PropTypes.func.isRequired,
    isFetching: PropTypes.objectOf(PropTypes.bool.isRequired).isRequired,
};

const mapStateToProps = (state) => ({
    isFetching: {
        articles: state.articles.isFetching,
        tags: state.tags.isFetching,
        feed: state.feed.isFetching,
    },
    tags: state.tags.tags,
    tag: state.tags.tag,
    articles: state.articles.articles,
    feed: state.feed.articles,
    error: {
        tags: state.tags.error,
        feed: state.feed.error,
        articles: state.articles.error,
    },
    articlesCount: state.articles.articlesCount,
});

const mapDispatchToProps = {
    fetchTags,
    fetchArticles,
    fetchYourFeedArticles,
};

export default connect(mapStateToProps, mapDispatchToProps)(Home);