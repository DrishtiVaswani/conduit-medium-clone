import {
    GET_ARTICLES_BY_AUTHOR_FAILURE,
    GET_ARTICLES_BY_AUTHOR_REQUEST,
    GET_ARTICLES_BY_AUTHOR_SUCCESS,
    GET_ARTICLES_FAILURE,
    GET_ARTICLES_FAVORITES_FAILURE,
    GET_ARTICLES_FAVORITES_REQUEST,
    GET_ARTICLES_FAVORITES_SUCCESS,
    GET_ARTICLES_FEED_FAILURE,
    GET_ARTICLES_FEED_REQUEST,
    GET_ARTICLES_FEED_SUCCESS,
    GET_ARTICLES_REQUEST,
    GET_ARTICLES_SUCCESS,
} from '../actionTypes';
import { defaultErrorMessage } from '../constants';
import Api from 'api';

const articlesRequest = () => ({
    type: GET_ARTICLES_REQUEST,
});

const articlesSuccess = (articles) => ({
    type: GET_ARTICLES_SUCCESS,
    payload: articles,
});

const articlesFailure = (errorMessage = defaultErrorMessage) => ({
    type: GET_ARTICLES_FAILURE,
    payload: errorMessage,
    error: true,
});

export const fetchArticles = (page, limit) => async (dispatch) => {

    dispatch(articlesRequest());

    try {
        const response = await Api.Articles.getAll(page, limit);
        dispatch(articlesSuccess(response.data));
    } catch (error) {
        dispatch(articlesFailure(error.response.data.errors));
    }
};

const articlesByAuthorRequest = () => ({
    type: GET_ARTICLES_BY_AUTHOR_REQUEST,
});

const articlesByAuthorSuccess = (data) => ({
    type: GET_ARTICLES_BY_AUTHOR_SUCCESS,
    payload: data,
});

const articlesByAuthorFailure = (errorMessage = defaultErrorMessage) => ({
    type: GET_ARTICLES_BY_AUTHOR_FAILURE,
    payload: errorMessage,
    error: true,
});

export const fetchArticlesByAuthor = (author, page) => async (dispatch) => {

    dispatch(articlesByAuthorRequest());

    try {
        const response = await Api.Articles.byAuthor(author, page);
        dispatch(articlesByAuthorSuccess(response.data));
    } catch (error) {
        dispatch(articlesByAuthorFailure(error.response.data.errors));
    }
};

const articlesFavoritesRequest = () => ({
    type: GET_ARTICLES_FAVORITES_REQUEST,
});

const articlesFavoritesSuccess = (articles) => ({
    type: GET_ARTICLES_FAVORITES_SUCCESS,
    payload: articles,
});

const articlesFavoritesFailure = (errorMessage = defaultErrorMessage) => ({
    type: GET_ARTICLES_FAVORITES_FAILURE,
    payload: errorMessage,
    error: true,
});

export const fetchArticlesFavorites = (author, page) => async (dispatch) => {

    dispatch(articlesFavoritesRequest());

    try {
        const response = await Api.Articles.favoritedBy(author, page);
        dispatch(articlesFavoritesSuccess(response.data));
    } catch (error) {
        dispatch(articlesFavoritesFailure(error.response.data.errors));
    }
};

const articlesFeedRequest = () => ({
    type: GET_ARTICLES_FEED_REQUEST,
});

const articlesFeedSuccess = (data) => ({
    type: GET_ARTICLES_FEED_SUCCESS,
    payload: data,
});

const articlesFeedFailure = (errorMessage = defaultErrorMessage) => ({
    type: GET_ARTICLES_FEED_FAILURE,
    payload: errorMessage,
    error: true,
});

export const fetchArticlesFeed = () => async (dispatch) => {

    dispatch(articlesFeedRequest());

    try {
        const response = await Api.Articles.feed();
        dispatch(articlesFeedSuccess(response.data));
    } catch (error) {
        dispatch(articlesFeedFailure(error.response.data.errors));
    }
};