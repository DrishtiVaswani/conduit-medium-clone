import {
    GET_ARTICLES_BY_AUTHOR_FAILURE,
    GET_ARTICLES_BY_AUTHOR_REQUEST,
    GET_ARTICLES_BY_AUTHOR_SUCCESS,
    GET_ARTICLES_FAILURE,
    GET_ARTICLES_FAVORITES_FAILURE,
    GET_ARTICLES_FAVORITES_REQUEST,
    GET_ARTICLES_FAVORITES_SUCCESS,
    GET_ARTICLES_REQUEST,
    GET_ARTICLES_SUCCESS,
    GET_ARTICLES_FEED_REQUEST,
    GET_ARTICLES_FEED_SUCCESS,
    GET_ARTICLES_FEED_FAILURE,
} from '../actionTypes';

const initialState = {
    isFetching: false,
    items: [],
    itemsCount: 0,
    errorMessage: null,
};

export default (state = initialState, { type, payload }) => {

    switch (type) {
        case GET_ARTICLES_REQUEST:
        case GET_ARTICLES_FAVORITES_REQUEST:
        case GET_ARTICLES_BY_AUTHOR_REQUEST:
        case GET_ARTICLES_FEED_REQUEST:
            return {
                ...state,
                isFetching: true,
                items: [],
                itemsCount: 0,
                errorMessage: null,
            };
        case GET_ARTICLES_SUCCESS:
        case GET_ARTICLES_FAVORITES_SUCCESS:
        case GET_ARTICLES_BY_AUTHOR_SUCCESS:
        case GET_ARTICLES_FEED_SUCCESS:
            return {
                ...state,
                isFetching: false,
                items: payload.articles,
                itemsCount: payload.articlesCount,
            };
        case GET_ARTICLES_FAILURE:
        case GET_ARTICLES_FAVORITES_FAILURE:
        case GET_ARTICLES_BY_AUTHOR_FAILURE:
        case GET_ARTICLES_FEED_FAILURE:
            return { ...state, isFetching: false, errorMessage: payload };

        case 'FETCH_LIKE_SUCCESS':
        case 'FETCH_UNLIKE_SUCCESS':
            return {
                ...state,
                articles: state.articles.map((article) => {

                    if (article.slug === payload.article.slug) {
                        return {
                            ...article,
                            favorited: payload.article.favorited,
                            favoritesCount: payload.article.favoritesCount,
                        };
                    }

                    return article;
                }),
            };
        default:
            return state;
    }
};