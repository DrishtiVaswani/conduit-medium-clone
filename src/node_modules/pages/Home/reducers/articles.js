const initialState = {
    isFetching: false,
    isFetchingLikeAndUnlike: false,
    data: [],
    errorMessage: null,
    articlesCount: 0,
};

export default (state = initialState, { type, payload }) => {

    switch (type) {
        case 'FETCH_ARTICLES_REQUEST':
        case 'FETCH_ARTICLES_BY_AUTHOR_REQUEST':
            return { ...state, isFetching: true, errorMessage: null };
        case 'FETCH_ARTICLES_SUCCESS':
        case 'FETCH_ARTICLES_BY_AUTHOR_SUCCESS':
            return {
                ...state,
                isFetching: false,
                data: payload.articles,
                articlesCount: payload.articlesCount,
            };
        case 'FETCH_ARTICLES_FAILURE':
        case 'FETCH_ARTICLES_BY_AUTHOR_FAILURE':
            return { ...state, isFetching: false, errorMessage: payload };

        case 'FETCH_LIKE_SUCCESS':
        case 'FETCH_UNLIKE_SUCCESS':
            return {
                ...state,
                articles: state.articles.map((article) => {

                    if (article.slug === payload.article.slug) {
                        return {
                            ...article,
                            favorited: payload.article.favorited,
                            favoritesCount: payload.article.favoritesCount,
                        };
                    }

                    return article;
                }),
            };
        default:
            return state;
    }
};