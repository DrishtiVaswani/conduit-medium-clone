import React, { useState } from 'react';
import { Link } from 'react-router-dom';
import { connect } from 'react-redux';
import { Alert, Avatar, Button, Spinner, Textarea } from 'evergreen-ui';

import Comment from '../Comment';
import { deleteComment } from 'pages/Article/actions';

import './comments.scss';

function Comments({ isFetching, createIsFetching, data, errorMessage, slug, createComment, currentUser, deleteComment }) {

    const [body, setBody] = useState('');

    const handleSubmit = (event) => {
        event.preventDefault();
        createComment(slug, { body });
        setBody('');
    };

    return (
        <section className="comments">
            <div className="comments-heading">
                <h3 className="comments-title">
                    Responses
                    <span className="comments-count">
                        {isFetching ? (
                            <Spinner size={24}/>
                        ) : data.length}
                    </span>
                </h3>
            </div>
            {currentUser ? (
                <form
                    className="comments-responses-editor"
                    onSubmit={handleSubmit}
                >
                    <div style={{
                        display: 'flex',
                    }}>
                        <Avatar
                            name="Jeroen Ransijn"
                            size={40}
                            marginRight={25}
                        />
                        <Textarea
                            required
                            name="responses"
                            placeholder="Write a response..."
                            value={body}
                            onChange={(event) => setBody(event.target.value)}
                        />
                    </div>
                    <div style={{
                        marginTop: '25px',
                        textAlign: 'right',
                    }}>
                        <Button
                            type="submit"
                            appearance="primary"
                            isLoading={createIsFetching}
                        >
                            Publish
                        </Button>
                    </div>
                </form>
            ) : (
                <div><Link to="/login">Sign in</Link> or <Link to="/register">sign up</Link> to add comments on this
                    article.</div>
            )}
            <ul className="comments-list">
                {errorMessage && (
                    <Alert
                        intent="danger"
                        title={errorMessage}
                    />
                )}
                {data.map((comment) => (
                    <Comment
                        key={comment.id}
                        {...comment}
                        currentUser={currentUser}
                        slug={slug}
                        deleteComment={deleteComment}
                    />
                ))}
            </ul>
        </section>
    );
}

const mapDispatchToProps = {
    deleteComment,
};

export default connect(null, mapDispatchToProps)(Comments);