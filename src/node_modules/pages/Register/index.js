import React from 'react';
import PropTypes from 'prop-types';
import { connect } from 'react-redux';
import { Redirect } from 'react-router-dom';
import { Form, Input, Button } from 'antd';

import Layout from 'components/Layout';
import { createUser } from 'actions/auth';

import './register.scss';

function Register({ createUser, isFetching, isAuthenticated }) {

    const handleSubmit = ({ username, email, password }) => {
        createUser(username, email, password);
    };

    if (isAuthenticated) {
        return <Redirect to="/" />
    }

    return (
        <Layout>
            <section className="register">
                <div className="register-heading">
                    <h1>Регистрация</h1>
                    <p>Быстро и легко.</p>
                </div>
                <Form
                    initialValues={{ remember: true }}
                    onFinish={handleSubmit}
                >
                    <header>
                        <h1>Регистрация</h1>
                        <p>Быстро и легко.</p>
                    </header>
                    <Form.Item
                        name="username"
                        rules={[{ required: true, message: 'Please input your username!' },
                        ]}
                    >
                        <Input
                            placeholder="Имя пользователя"
                            size="large"
                        />
                    </Form.Item>

                    <Form.Item
                        name="email"
                        rules={[{ required: true, message: 'Please input your email!' }]}
                    >
                        <Input
                            type="email"
                            placeholder="Электронный адрес"
                            size="large"
                        />
                    </Form.Item>

                    <Form.Item
                        name="password"
                        rules={[{ required: true, message: 'Please input your password!' }]}
                    >
                        <Input.Password
                            type="password"
                            placeholder="Пароль"
                            size="large"
                        />
                    </Form.Item>

                    <Form.Item>
                        <Button
                            type="primary"
                            htmlType="submit"
                            loading={isFetching}
                            size="large"
                            block
                        >
                            Регистрация
                        </Button>
                    </Form.Item>
                </Form>
            </section>
        </Layout>
    );
}

Register.propTypes = {
    isFetching: PropTypes.bool.isRequired,
    isAuthenticated: PropTypes.bool.isRequired,
};

const mapStateToProps = (state) => ({
    isFetching: state.auth.isFetching,
    error: state.auth.error,
    isAuthenticated: state.auth.isAuthenticated,
});

const mapDispatchToProps = {
    createUser,
};

export default connect(mapStateToProps, mapDispatchToProps)(Register);