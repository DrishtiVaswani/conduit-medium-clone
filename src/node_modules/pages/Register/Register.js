import React, { useState } from 'react';
import PropTypes from 'prop-types';
import { Redirect } from 'react-router-dom';
import { Alert, Button, Pane, TextInput } from 'evergreen-ui';

import './register.scss';

function Register({ signUp, auth }) {

    const [username, setUsername] = useState('');
    const [email, setEmail] = useState('');
    const [password, setPassword] = useState('');

    const handleSubmit = (event) => {
        event.preventDefault();
        signUp(username, email, password);
    };

    const { isFetching, errorMessage, isAuthenticated } = auth;

    if (isAuthenticated) {
        return <Redirect to="/" />
    }

    return (
        <main className="main">
            <div className="container">
                <div className="register">
                    <form onSubmit={handleSubmit}>
                        <header className="register-heading">
                            <h1>Регистрация</h1>
                            <p>Быстро и легко.</p>
                        </header>

                        {errorMessage && (
                            <Pane>
                                {Object.keys(errorMessage).map((key) => (
                                    <Alert
                                        appearance="card"
                                        intent="danger"
                                        title={`${key} ${errorMessage[key]}`}
                                        style={{ marginTop: '10px' }}
                                    />
                                ))}
                            </Pane>
                        )}

                        <div>
                            <TextInput
                                required
                                type="text"
                                placeholder="Имя пользователя"
                                value={username}
                                onChange={(e) => setUsername(e.target.value)}
                                width="100%"
                                height={40}
                            />
                        </div>

                        <div>
                            <TextInput
                                required
                                type="email"
                                placeholder="Электронный адрес"
                                value={email}
                                onChange={(e) => setEmail(e.target.value)}
                                width="100%"
                                height={40}
                            />
                        </div>

                        <div>
                            <TextInput
                                required
                                type="password"
                                placeholder="Пароль"
                                value={password}
                                onChange={(e) => setPassword(e.target.value)}
                                width="100%"
                                height={40}
                            />
                        </div>

                        <Button
                            type="submit"
                            appearance="primary"
                            isLoading={isFetching}
                            height={40}
                        >
                            Регистрация
                        </Button>
                    </form>
                </div>
            </div>
        </main>
    );
}

Register.propTypes = {
    signUp: PropTypes.func.isRequired,
    auth: PropTypes.object.isRequired,
};

export default Register;