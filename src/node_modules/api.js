import axios from 'axios';

const token = localStorage.getItem('jwt');

const Api = axios.create({
    baseURL: process.env.REACT_APP_BASE_URL,
    headers: {
        'Accept': 'application/json',
        'Content-Type': 'application/json',
        'Authorization': token ? `Token ${token}` : '',
    },
});

const Auth = {
    current: () =>
        Api.get('/user'),
    login: (email, password) =>
        Api.post('/users/login', { user: { email, password } }),
    register: (username, email, password) =>
        Api.post('/users', { user: { username, email, password } }),
    save: user =>
        Api.put('/user', { user }),
};

const Profile = {
    follow: (username) =>
        Api.post(`/profiles/${username}/follow`),
    get: (username) =>
        Api.get(`/profiles/${username}`),
    unfollow: (username) =>
        Api.delete(`/profiles/${username}/follow`),
};

const Tags = {
    getAll: () =>
        Api.get('/tags'),
};

const Articles = {
    get: (slug) =>
        Api.get(`/articles/${slug}`),
    getAll: (offset, limit = 10) =>
        Api.get(`/articles?offset=${offset ? offset * limit : 0}&limit=${limit}`),
    like: (slug) =>
        Api.post(`/articles/${slug}/favorite`),
    unlike: (slug) =>
        Api.delete(`/articles/${slug}/favorite`),
    byTag: (tag, page, limit = 10) =>
        Api.get(`/articles?tag=${encodeURIComponent(tag)}&offset=${page ? page * limit : 0}&limit=${limit}`),
    byAuthor: (author, page, limit = 5) =>
        Api.get(`/articles?author=${encodeURIComponent(author)}&offset=${page ? page * limit : 0}&limit=${limit}`),
};

const Comments = {
    create: (slug, comment) =>
        Api.post(`/articles/${slug}/comments`, { comment }),
    delete: (slug, commentId) =>
        Api.delete(`/articles/${slug}/comments/${commentId}`),
    forArticle: (slug) =>
        Api.get(`/articles/${slug}/comments`),
};

export default {
    Profile,
    Articles,
    Tags,
    Comments,
    Auth,
};