import axios from 'axios';

const Api = axios.create({
    baseURL: process.env.REACT_APP_BASE_URL,
    headers: {
        'Accept': 'application/json',
        'Content-Type': 'application/json',
        'Authorization': `Token ${localStorage.getItem('jwt')}`,
    },
});

const Tags = {
    getAll: () =>
        Api.get('/tags'),
};

const Articles = {
    getAll: (offset, limit = 10) =>
        Api.get(`/articles?offset=${offset ? offset * limit : 0}&limit=${limit}`),
    like: (slug) =>
        Api.post(`/articles/${slug}/favorite`),
    unlike: (slug) =>
        Api.delete(`/articles/${slug}/favorite`),
    byTag: (tag, page, limit = 10) =>
        Api.get(`/articles?tag=${encodeURIComponent(tag)}&offset=${page ? page * limit : 0}&limit=${limit}`),
};

const baseUrl = 'https://conduit.productionready.io/api';
const token = localStorage.getItem('jwt');

const requests = {
    del: url => fetch(`${baseUrl}${url}`, {
        method: 'DELETE',
        headers: {
            'Content-Type': 'application/json;charset=utf-8',
            'Authorization': `Token ${token}`,
        },
    }).then(response => response.json()),

    get: (url) => fetch(`${baseUrl}${url}`, {
        method: 'GET',
        headers: {
            'Content-Type': 'application/json;charset=utf-8',
            'Authorization': `Token ${token}`,
        },
    }).then(response => response.json()),

    put: (url, body) => fetch(`${baseUrl}${url}`, {
        method: 'PUT',
        headers: {
            'Content-Type': 'application/json;charset=utf-8',
            'Authorization': `Token ${token}`,
        },
        body: JSON.stringify(body),
    }).then(response => response.json()),

    post: (url, body) => fetch(`${baseUrl}${url}`, {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json;charset=utf-8',
            'Authorization': `Token ${token}`,
        },
        body: JSON.stringify(body),
    }).then(response => response.json()),
};

const Profile = {
    follow: (username) => requests.post(`/profiles/${username}/follow`),
    get: (username) => requests.get(`/profiles/${username}`),
    unfollow: (username) => requests.del(`/profiles/${username}/follow`),
};

export default {
    Profile,
    Articles,
    Tags,
};